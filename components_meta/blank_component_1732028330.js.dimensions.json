{
    "id": "blank_component_1732028330",
    "name": "blank-component",
    "type": "containerComponent",
    "metadata": {
        "markdownText": "<!--\nINSTRUCTION: Summary: The blank component contains the following two parts:\nINSTRUCTION: - To the left: There is an empty div with text on top and bottom.\nINSTRUCTION: - To the right: There is an empty div.\nINSTRUCTION:\nINSTRUCTION: If the user asks you to insert components left and right of each other, first wrap them into `<div class=\"grid\"> </div>` and then use the following syntax:\nINSTRUCTION: <div class=\"grid\">\nINSTRUCTION:     <!-- these components appear to the left side -->\nINSTRUCTION:     <div id=\"left-side-container\" class=\"flex\"> Left side part here </div>\nINSTRUCTION:\nINSTRUCTION:     <!-- these components appear to the right side -->\nINSTRUCTION:     <div id=\"right-side-container\" class=\"flex\"> Right side part here</div>\nINSTRUCTION: </div>\n-->\n<template>\n    <div>\n        <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>\n        <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\n        <section id=\"blank-section\" class=\"bg-white dark:bg-gray-900 flex-1\">\n            <div id=\"blank-container\" class=\"max-w-screen-xl px-4 pt-20 pb-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12 lg:pt-28\">\n                <div class=\"flex-1\">\n                    <form @submit.prevent=\"handleSwap\" class=\"bg-white dark:bg-gray-800 shadow-md rounded-lg px-8 pt-6 pb-8 mb-4\">\n                        <div class=\"mb-4\">\n                            <label class=\"block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2\" for=\"fromAmount\">\n                                From Amount\n                            </label>\n                            <input class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-300 leading-tight focus:outline-none focus:shadow-outline\" id=\"fromAmount\" type=\"number\" v-model=\"fromAmount\" placeholder=\"Enter amount\">\n                        </div>\n                        <div class=\"mb-4\">\n                            <label class=\"block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2\" for=\"fromCurrency\">\n                                From Currency\n                            </label>\n                            <select class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-300 leading-tight focus:outline-none focus:shadow-outline\" id=\"fromCurrency\" v-model=\"fromCurrency\">\n                                <option value=\"BTC\">Bitcoin (BTC)</option>\n                                <option value=\"ETH\">Ethereum (ETH)</option>\n                                <option value=\"USDT\">Tether (USDT)</option>\n                            </select>\n                        </div>\n                        <div class=\"mb-4\">\n                            <label class=\"block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2\" for=\"toCurrency\">\n                                To Currency\n                            </label>\n                            <select class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-300 leading-tight focus:outline-none focus:shadow-outline\" id=\"toCurrency\" v-model=\"toCurrency\">\n                                <option value=\"BTC\">Bitcoin (BTC)</option>\n                                <option value=\"ETH\">Ethereum (ETH)</option>\n                                <option value=\"USDT\">Tether (USDT)</option>\n                            </select>\n                        </div>\n                        <div class=\"mb-4\">\n                            <label class=\"block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2\" for=\"toAmount\">\n                                Estimated Receive Amount\n                            </label>\n                            <input class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 dark:text-gray-300 leading-tight focus:outline-none focus:shadow-outline\" id=\"toAmount\" type=\"number\" :value=\"estimatedAmount\" readonly>\n                        </div>\n                        <div class=\"flex items-center justify-between\">\n                            <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n                                Swap\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </section>  \n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"BlankComponent\",\n    data() {\n        return {\n            fromAmount: 0,\n            fromCurrency: 'BTC',\n            toCurrency: 'ETH',\n            estimatedAmount: 0,\n        };\n    },\n    methods: {\n        // Swap method\n        handleSwap() {\n            console.log('Swap initiated');\n            // Add your swap logic here\n        },\n        // End of Swap method\n\n        // Estimate amount method\n        estimateAmount() {\n            // Add your estimation logic here\n            this.estimatedAmount = this.fromAmount * 2; // Placeholder calculation\n        }\n        // End of Estimate amount method\n    },\n    watch: {\n        fromAmount() {\n            this.estimateAmount();\n        },\n        fromCurrency() {\n            this.estimateAmount();\n        },\n        toCurrency() {\n            this.estimateAmount();\n        }\n    }\n};\n</script>\n\n<style scoped>\n/* Add component-specific styles here */\n</style>\n"
    },
    "w": 12,
    "h": 11,
    "x": 0,
    "y": 0,
    "i": "0",
    "minW": 3,
    "maxW": 12,
    "minH": 1,
    "moved": false,
    "static": false,
    "isDraggable": true,
    "isResizable": true
}